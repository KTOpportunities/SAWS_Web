{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n};\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n    this.loginBody = {\n      Username: \"\",\n      Password: \"\"\n    };\n  }\n  login(form) {\n    debugger;\n    return this.http.post(environment.serverAPI + 'Authenticate/login', form);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { AuthService };","map":{"version":3,"names":["HttpHeaders","environment","httpOptions","headers","AuthService","constructor","http","loginBody","Username","Password","login","form","post","serverAPI","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lucia\\Documents\\GitHub\\SAWS_Web\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http'\r\nimport { environment } from '../../../environment';\r\nimport { from } from 'rxjs';\r\n\r\ninterface loginform {\r\n  Username:string,\r\n  Password:string\r\n}\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*'\r\n  })\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  loginBody:loginform = {\r\n    Username:\"\",\r\n    Password:\"\"\r\n    }\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(form:loginform){\r\n    debugger\r\n    return this.http.post<any>(environment.serverAPI + 'Authenticate/login',form);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;AAC5D,SAASC,WAAW,QAAQ,sBAAsB;;;AAOlD,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IACvB,cAAc,EAAE,kBAAkB;IAClC,6BAA6B,EAAE;GAChC;CACF;AAED,MAGaI,WAAW;EAMtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALxB,KAAAC,SAAS,GAAa;MACpBC,QAAQ,EAAC,EAAE;MACXC,QAAQ,EAAC;KACR;EAEqC;EAExCC,KAAKA,CAACC,IAAc;IAClB;IACA,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAMX,WAAW,CAACY,SAAS,GAAG,oBAAoB,EAACF,IAAI,CAAC;EAC/E;EAAC,QAAAG,CAAA,G;qBAXUV,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EAFV;EAAM;;SAEPlB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}