{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from \"@angular/core\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nlet UserManagementComponent = class UserManagementComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    // Define the displayed columns\n    this.displayedColumns = [\"fullName\", \"email\", \"phone\", \"createdDate\", \"status\", \"action\"];\n    this.dataSource = new MatTableDataSource([]);\n  }\n  ngAfterViewInit() {\n    this.apiService.getPagedAllSubscribers().subscribe(data => {\n      this.dataSource.data = data; // Assuming the API returns an array of objects\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, error => {\n      console.error(\"Error fetching data from API:\", error);\n    });\n  }\n  // Add your toggle/edit/delete methods here\n  toggleUser(user) {\n    // Implement toggle logic\n  }\n  editUser(user) {\n    // Implement edit logic\n  }\n  deleteUser(user) {\n    // Implement delete logic\n  }\n};\n__decorate([ViewChild(MatPaginator, {\n  static: true\n})], UserManagementComponent.prototype, \"paginator\", void 0);\n__decorate([ViewChild(MatSort, {\n  static: true\n})], UserManagementComponent.prototype, \"sort\", void 0);\nUserManagementComponent = __decorate([Component({\n  selector: \"app-user-management\",\n  templateUrl: \"./user-management.component.html\",\n  styleUrls: [\"./user-management.component.css\"]\n})], UserManagementComponent);\nexport { UserManagementComponent };","map":{"version":3,"names":["Component","ViewChild","MatTableDataSource","MatPaginator","MatSort","UserManagementComponent","constructor","apiService","displayedColumns","dataSource","ngAfterViewInit","getPagedAllSubscribers","subscribe","data","paginator","sort","error","console","toggleUser","user","editUser","deleteUser","__decorate","static","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Lucia\\Documents\\GitHub\\SAWS_Web\\src\\app\\pages\\user-management\\user-management.component.ts"],"sourcesContent":["import { Component, ViewChild, AfterViewInit } from \"@angular/core\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\n\n@Component({\n  selector: \"app-user-management\",\n  templateUrl: \"./user-management.component.html\",\n  styleUrls: [\"./user-management.component.css\"],\n})\nexport class UserManagementComponent {\n  constructor(private apiService: YourApiService) {}\n  @ViewChild(MatPaginator, { static: true }) paginator!: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\n\n  // Define the displayed columns\n  displayedColumns: string[] = [\n    \"fullName\",\n    \"email\",\n    \"phone\",\n    \"createdDate\",\n    \"status\",\n    \"action\",\n  ];\n  \ndataSource = new MatTableDataSource<any>([]);\n\nngAfterViewInit() {\n  this.apiService.getPagedAllSubscribers().subscribe(\n    (data) => {\n      this.dataSource.data = data; // Assuming the API returns an array of objects\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    },\n    (error) => {\n      console.error(\"Error fetching data from API:\", error);\n    }\n  );\n}\n  // Add your toggle/edit/delete methods here\n  toggleUser(user: any) {\n    // Implement toggle logic\n  }\n\n  editUser(user: any) {\n    // Implement edit logic\n  }\n\n  deleteUser(user: any) {\n    // Implement delete logic\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,SAAS,QAAuB,eAAe;AACnE,SAASC,kBAAkB,QAAwB,yBAAyB;AAI5E,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,OAAO,QAAQ,wBAAwB;AAOhD,IAAaC,uBAAuB,GAApC,MAAaA,uBAAuB;EAClCC,YAAoBC,UAA0B;IAA1B,KAAAA,UAAU,GAAVA,UAAU;IAI9B;IACA,KAAAC,gBAAgB,GAAa,CAC3B,UAAU,EACV,OAAO,EACP,OAAO,EACP,aAAa,EACb,QAAQ,EACR,QAAQ,CACT;IAEH,KAAAC,UAAU,GAAG,IAAIP,kBAAkB,CAAM,EAAE,CAAC;EAdO;EAgBnDQ,eAAeA,CAAA;IACb,IAAI,CAACH,UAAU,CAACI,sBAAsB,EAAE,CAACC,SAAS,CAC/CC,IAAI,IAAI;MACP,IAAI,CAACJ,UAAU,CAACI,IAAI,GAAGA,IAAI,CAAC,CAAC;MAC7B,IAAI,CAACJ,UAAU,CAACK,SAAS,GAAG,IAAI,CAACA,SAAS;MAC1C,IAAI,CAACL,UAAU,CAACM,IAAI,GAAG,IAAI,CAACA,IAAI;IAClC,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CACF;EACH;EACE;EACAE,UAAUA,CAACC,IAAS;IAClB;EAAA;EAGFC,QAAQA,CAACD,IAAS;IAChB;EAAA;EAGFE,UAAUA,CAACF,IAAS;IAClB;EAAA;CAGH;AAxC4CG,UAAA,EAA1CrB,SAAS,CAACE,YAAY,EAAE;EAAEoB,MAAM,EAAE;AAAI,CAAE,CAAC,C,yDAA0B;AAC9BD,UAAA,EAArCrB,SAAS,CAACG,OAAO,EAAE;EAAEmB,MAAM,EAAE;AAAI,CAAE,CAAC,C,oDAAgB;AAH1ClB,uBAAuB,GAAAiB,UAAA,EALnCtB,SAAS,CAAC;EACTwB,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWrB,uBAAuB,CA0CnC;SA1CYA,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}